/*general variables*/
$highlightColor: yellow;

/*colors*/

/*fonts*/

/*
    breakpoint variables
    usage: @media #{$breakpointPhoneMax} {}
*/
$widthPhone: 320px;
$widthPhoneLandscape: 480px;
$widthTablet: 768px;
$widthTabletLandscape: 992px;
$widthDesktop: 1200px;
$widthDesktopWide: 1400px;
$breakpointPhoneMax: "only screen and (max-width : $widthPhone)";
$breakpointPhoneLandscapeMax: "only screen and (max-width : $widthPhoneLandscape)";
$breakpointTabletMax: "only screen and (max-width : $widthTablet)";
$breakpointTabletLandscapeMax: "only screen and (max-width : $widthTabletLandscape)";
$breakpointDesktopMax: "only screen and (max-width : $widthDesktopWide)";
$breakpointDesktopWideMax: "only screen and (max-width : $widthDesktopWide)";
$breakpointPhoneMin: "only screen and (min-width : $widthPhone)";
$breakpointPhoneLandscapeMin: "only screen and (min-width : $widthPhoneLandscape)";
$breakpointTabletMin: "only screen and (min-width : $widthTablet)";
$breakpointTabletLandscapeMin: "only screen and (min-width : $widthTabletLandscape)";
$breakpointDesktopMin: "only screen and (min-width : $widthDesktopWide)";
$breakpointDesktopWideMin: "only screen and (min-width : $widthDesktopWide)";

/*e.g. box-shadow(0px, 0px, 0px, rgba(0,0,0,.5));*/
@mixin box-shadow($x, $y, $blur, $color) {
	-moz-box-shadow: $x $y $blur $color;
	-webkit-box-shadow: $x $y $blur $color;
	box-shadow: $x $y $blur $color;
	/*-ms-filter: "progid:DXImageTransform.Microsoft.Shadow(Strength=$blur, Direction=135, Color='$color')";
	filter: progid:DXImageTransform.Microsoft.Shadow(Strength=$blur, Direction=135, Color='$color');*/
}


/*e.g. @include transition(background, .5s, ease, 0s);*/
@mixin transition($property, $ms, $easing, $delay){
	-webkit-transition: $property $ms $easing $delay;
    -moz-transition: $property $ms $easing $delay;
    -o-transition: $property $ms $easing $delay;
    transition: $property $ms $easing $delay;
}

/*e.g. @include radius(4px); */
@mixin radius($pixels){
	-webkit-border-radius: $pixels;
	-moz-border-radius: $pixels;
	border-radius: $pixels;
}

/*e.g. @include greyscale();*/
@mixin greyscale(){
    filter: url("data:image/svg+xml;utf8,&lt;svg xmlns=\'http://www.w3.org/2000/svg\'&gt;&lt;filter id=\'grayscale\'&gt;&lt;feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale");
    filter: gray;
    -webkit-filter: grayscale(100%);
}
/*e.g. @include removeGreyscale();*/
@mixin removeGreyscale(){
    filter: url("data:image/svg+xml;utf8,&lt;svg xmlns=\'http://www.w3.org/2000/svg\'&gt;&lt;filter id=\'grayscale\'&gt;&lt;feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale");
    -webkit-filter: grayscale(0%);
}
