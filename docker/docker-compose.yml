version: '2'

services:

  company-ubuntu-service:
    container_name: company-ubuntu-container
    image: company-ubuntu-image
    build:
      context: .
      dockerfile: ./docker/company-ubuntu/Dockerfile
    entrypoint: /container/folder/docker/company-ubuntu/start.sh
    depends_on:
      - company-mysql-service
    environment:
      SOME_VARIABLE: some_variable_string
    volumes:
      - ./:/usr/src/app
      - some-volume:/container/folder
    ports:
      - "8004:8004"
    # restart: always
    networks:
      - default

  company-php-service:
    container_name: company-php-container
    image: company-php-image
    build:
      context: .
      dockerfile: ./docker/company-php/Dockerfile
    entrypoint: /var/www/docker/company-php/start.sh
    depends_on:
      - company-mysql-service
    environment:
      SOME_VARIABLE: some_variable_string
    volumes:
      - ./:/var/www/html
      - composer:/var/www/html/vendor
    ports:
      - "8000:8000"
    # restart: always
    networks:
      - default

  company-mysql-service:
    container_name: company-mysql-container
    image: company-mysql-image
    build:
      context: .
      dockerfile: ./docker/company-mysql/Dockerfile
    # volumes:
    #   - "./.data/db:/var/lib/mysql"
    environment:
      MYSQL_DATABASE: company
      MYSQL_ROOT_PASSWORD: docker
    ports:
      - "3306:3306"
    networks:
      - default

volumes:
  composer:
networks:
  default: