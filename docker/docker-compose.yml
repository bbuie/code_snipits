version: '2'

services:

  node-service:
    container_name: company-node-container
    image: company-node-image
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    entrypoint: /var/www/docker/node/start.sh
    depends_on:
      - mysql-service
    environment:
      SOME_VARIABLE: some_variable_string
    volumes:
      - ./:/var/www/html
      - node_modules:/var/www/html/node_modules
    ports:
      - "3000:3000"
    networks:
      - default

  php-service:
    container_name: company-php-container
    image: company-php-image
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    entrypoint: /var/www/docker/php/start.sh
    depends_on:
      - mysql-service
    environment:
      SOME_VARIABLE: some_variable_string
    volumes:
      - ./:/var/www/html
      - composer:/var/www/html/vendor
    ports:
      - "8000:8000"
    networks:
      - default

  laravel-service:
    container_name: company-laravel-container
    image: company-laravel-image
    build:
      context: .
      dockerfile: ./docker/laravel/Dockerfile
    entrypoint: /var/www/docker/laravel/start.sh
    depends_on:
      - mysql-service
      - node-service
    environment:
      DB_HOST: mysql-service
      DB_DATABASE: docker
      DB_USERNAME: root
      DB_PASSWORD: docker
    volumes:
      - ./:/var/www/html
      - composer:/var/www/html/vendor
      - node_modules:/var/www/html/node_modules
    ports:
      - "80:80"
    networks:
      - default

  ruby-service:
    container_name: company-ruby-container
    image: company-ruby-image
    build:
      context: .
      dockerfile: ./docker/ruby/Dockerfile
    command: compass watch --poll
    volumes:
      - ./:/var/www/html
    # depends_on:
    #   - laravel-service
    networks:
      - default

  mysql-service:
    container_name: company-mysql-container
    image: company-mysql-image
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: docker
    ports:
      - "3306:3306"
    networks:
      - default

  ios-build-service:
    container_name: dym-ios-build-container
    image: dym-ios-build-image
    build:
      context: .
      dockerfile: ./docker/ios/Dockerfile
    entrypoint: /var/www/docker/ios/start.sh
    networks:
      - default
    depends_on:
      - node-service
    volumes:
      - ./:/var/www/html
      - node_modules:/var/www/html/node_modules

volumes:
  composer:
  node_modules:
networks:
  default: